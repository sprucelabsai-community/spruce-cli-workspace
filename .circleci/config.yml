version: 2.1
orbs:
  spruce: sprucelabsai/orb@1
jobs:
  setup_for_test:
    docker:
      - image: cimg/node:16.14
    resource_class: medium
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - checkout
      - spruce/check_and_skip_if_npm_publish
      - run:
          name: "ENV file creation"
          command: |
            [ -n "$BASE64_ENV" ] && echo $BASE64_ENV | base64 --decode > packages/spruce-cli/.env
      - run: node -v && npm -v && yarn -v
      - spruce/install_rsync
      - run:
          name: "Install"
          command: |
            yarn install
      - run:
          name: "Build"
          command: |
            yarn build.ci
      - save_cache:
          name: Cache node modules/build
          key: cli-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/project/node_modules
            - ~/project/build
            - ~/project/packages/spruce-cli/node_modules
            - ~/project/packages/spruce-cli/build
            - ~/project/packages/spruce-templates/node_modules
            - ~/project/packages/spruce-templates/build
      - run:
          name: "Clean test data"
          command: |
            yarn clean.test.data
  test:
    docker:
      - image: cimg/node:16.14
    resource_class: xlarge
    parallelism: 8
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - checkout
      - spruce/check_and_skip_if_npm_publish
      - spruce/install_rsync
      - restore_cache:
          name: Restoring Cached node modules/build
          keys:
            - cli-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "ENV file creation"
          command: |
            [ -n "$BASE64_ENV" ] && echo $BASE64_ENV | base64 --decode > packages/spruce-cli/.env

      - run:
          name: "Test ðŸ’ª"
          command: |
            cd packages/spruce-cli
            mkdir ~/junit
            TEST=$(circleci tests glob 'build/__tests__/implementation/**/*.test.js' 'build/__tests__/behavioral/**/*.test.js' | circleci tests split --split-by=timings)
            yarn test --verbose -w 2 $TEST
            mv junit.xml ~/junit
          no_output_timeout: 20m
      - store_test_results:
          path: ~/junit
      - run:
          name: "Max memory usage for tests"
          command: cat /sys/fs/cgroup/memory/memory.max_usage_in_bytes
          when: always
  cleanup_test:
    docker:
      - image: cimg/node:16.14
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - checkout
      - spruce/check_and_skip_if_npm_publish
      - restore_cache:
          keys:
            - cli-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Clean test data
          command: yarn run clean.test.data
  merge_auto_upgrade:
    docker:
      - image: cimg/node:16.14
    resource_class: medium
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - spruce/exit_if_not_auto_upgrade
      - checkout
      - spruce/merge_auto_upgrade
  npm_publish:
    docker:
      - image: cimg/node:16.14
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - checkout
      - spruce/check_and_skip_if_npm_publish
      - restore_cache:
          keys:
            - cli-build-{{ .Environment.CIRCLE_SHA1 }}
      - run: git config --global user.email "$GIT_AUTHOR_EMAIL"
      - run: git config --global user.name "$GIT_AUTHOR_NAME"
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: 'npm run publish -- --yes --force-publish --dist-tag latest --message "chore(release): %v [npm-publish]"'
  upgrade:
    docker:
      - image: cimg/node:16.14
    steps:
      - spruce/check_for_autoupgrade_dns
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - spruce/check_for_ssh_keys_env
      - spruce/setup_ct_npm_cache
      - checkout
      - spruce/set_target_branch_env
      - run:
          name: "Try to upgrade"
          command: |
            git checkout -b $TARGETBRANCH || git checkout $TARGETBRANCH
            git reset --hard master
            git config --global user.email "$GIT_AUTHOR_EMAIL"
            git config --global user.name "$GIT_AUTHOR_NAME"
            ./upgrade.sh
            yarn fix.lint
            if [[ $(git status) != *"modified"* ]]; then 
              echo "No modifications detected.  No push/PR necessary ðŸ‘Š"
              circleci-agent step halt
            fi
      - spruce/create_pr
workflows:
  version: 2.1
  do_build:
    jobs:
      - setup_for_test:
          context: public_package_publish
      - test:
          requires:
            - setup_for_test
          context: public_package_publish
      - cleanup_test:
          requires:
            - setup_for_test
            - test
          context: public_package_publish
      - merge_auto_upgrade:
          requires:
            - setup_for_test
            - test
          context: public_package_publish
          filters:
            branches:
              only: /upgrade-.*/
      - npm_publish:
          requires:
            - setup_for_test
            - test
          context: public_package_publish
          filters:
            branches:
              only:
                - master
  upgrade:
    jobs:
      - upgrade:
          context: public_package_publish
          filters:
            branches:
              only:
                - never_run_only_for_cron
