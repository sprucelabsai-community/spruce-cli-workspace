#!/usr/bin/env bash
confirm() {
  # call with a prompt string or use a default
  read -r -p "${1:-Are you sure? [Y/n]} " response
  if [[ -z "$response" ]]; then
    echo "returning true for default enter"
    true
  else
    case "$response" in
      [yY][eE][sS]|[yY]) 
        true
        ;;
      *)
        false
        ;;
    esac
  fi
}

do_start() {
  echo
  echo "*** Lets deploy! ***"
  echo
}

do_end() {
  echo
  echo "*** Bye ***"
  echo
  exit $1
}


do_start

res=`which heroku 2>&1`

if [[ $? -ne 0 ]]; then
  echo "heroku cli not found - follow install instructions @ https://devcenter.heroku.com/articles/heroku-cli#download-and-install"
  do_end 1
fi

res=`grep machine api.heroku.com ~/.netrc 2>/dev/null`
if [[ ! -f ~/.netrc || -z "$res" ]]; then
  echo "Unable to login to Heroku! Please login and try again"
  echo "run: heroku login"
  do_end 1
fi

if [[ ! -d .git ]]; then
  gitstatus=`git status 2>&1`
  if [[ $? -eq 0 ]]; then
    echo "It looks like we are not in the root directory of this repository - please change to the repo root"
    do_end 1
  fi
  if confirm "This doesn't appear to be a git repo, would you like to init it as one? [Y/n] "; then
    git init
  else
    do_end 1
  fi
fi

if [[ ! -f "Procfile" ]]; then
  if confirm "Heroku Procfile not found, would you like to create one? [Y/n] "; then
    echo -- "web: npm run boot" > Procfile
  else
    echo -n
  fi
fi

LSREMOTE=`git ls-remote heroku 2>&1`
if [[ $? -ne 0 ]]; then
  if confirm "No remote for 'heroku' found, would you like to create an app? [Y/n] "; then
    while true ; do
      read -r -p "What do you want the app to be named? " response
      if [[ $ARGC -ne 1 ]]; then
        heroku create "$response"
      else
        heroku create -t $1 "$response"
      fi
      heroku buildpacks:set heroku/nodejs
      [[ $? -ne 0 ]] || break
    done
  else
    echo "hit the else in create an app - we can't do anything"
    echo "Maybe they have their remote named differently?"
    echo -n
    do_end 1
  fi
fi

git update-index --refresh > /dev/null 2>&1
diffidx=`git diff-index --quiet HEAD -- 2>&1`
if [[ $? -ne 0 ]]; then
  if confirm "You have modifications or unstaged files, do you want to proceed with the push? [Y/n] "; then
    echo "Cool - off we go"
  else
    echo "When finished with your changes rerun the deploy"
    do_end 0
  fi
fi   

git push --set-upstream heroku master
