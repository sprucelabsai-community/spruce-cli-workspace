import * as SpruceSchema from '@sprucelabs/schema'

{{! the definition partial, pass a schema and get back object that is the values and types }}
{{#* inline "schemaValues"}}
	{{#if dynamicKeySignature }}
    	/* {{dynamicKeySignature.label}}.{{#if dynamicKeySignature.hint}} {{dynamicKeySignature.hint}}{{/if}} */
    	[{{dynamicKeySignature.key}}:string]: string{{/if}}{{#if dynamicKeySignature.isArray}}[]{{/if}}
	{{#each fields}}
    	/* {{label}}.{{#if hint}} {{hint}}{{/if}} */
		'{{@key}}'{{#unless isRequired}}?{{/unless}}: {{fieldValueType this }}
	{{/each}}
{{/inline}}

{{#* inline "schemaDefinition"}}
  id: '{{{escape id}}}',
  name: '{{{escape name}}}',
  description: '{{{escape description}}}',
  {{#if fields}}
  fields: {
  	{{#each fields}}
    	'{{@key}}': {
        	label: '{{id}}',
            type: {{fieldTypeEnum this}},
			options: {}
        },
    {{/each}}
  }
  {{/if}}
{{/inline}}


{{#each namespaces}}
	{{#each schemas}}
  
  	
	  	export namespace SpruceSchemas.{{../namespace}}.{{this.typeName}} {
			/* {{this.definition.description}} */
			export interface {{this.interfaceName}} {
				{{> schemaValues this.definition }}
			}
            
			/* the schema definition for a {{this.typeName}} */
			export const definition: SpruceSchemas.{{../namespace}}.{{this.typeName}}.{{this.interfaceName}}Definition = {
				{{> schemaDefinition this.definition }}
			}
			
			/* the interface for the schema definition for a {{this.typeName}} */
			export interface {{this.interfaceName}}Definition {
				{{> schemaDefinition this.definition }}
			}
		}
      
	{{/each}}
{{/each}}


