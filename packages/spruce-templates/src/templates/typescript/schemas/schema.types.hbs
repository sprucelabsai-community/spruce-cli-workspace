import { default  as Schema } from '@sprucelabs/schema'
import * as SpruceSchema from '@sprucelabs/schema'


// Schemas by namespace
{{! the definition partial, pass a schema and get back object that is the values and types }}
{{#* inline "schemaValues"}}
	{{#if dynamicKeySignature }}
    	/** {{dynamicKeySignature.label}}.{{#if dynamicKeySignature.hint}} {{dynamicKeySignature.hint}}{{/if}} */
    	[{{dynamicKeySignature.key}}:string]: string{{/if}}{{#if dynamicKeySignature.isArray}}[]{{/if}}
	{{#each fields}}
    	/** {{{label}}}.{{#if hint}} {{{hint}}}{{/if}} */
		'{{@key}}'{{#unless isRequired}}?{{/unless}}: {{fieldDefinitionValueType this }}
	{{/each}}
{{/inline}}


{{#each schemaTemplateItems}}

	export namespace SpruceSchemas.{{namespace}}.{{pascalName}} {
		export const id = '{{{escape id}}}'

		/** {{definition.description}} */
		export interface {{pascalName}} {
			{{> schemaValues definition }}
		}

		/** The interface for the schema definition for a {{readableName}} */
		export interface IDefinition extends SpruceSchema.ISchemaDefinition {
			{{> schemaDefinition schema=definition renderAs="type" }}
		}

		/** The schema definition for a {{pascalName}} */
		export const definition: SpruceSchemas.{{namespace}}.{{pascalName}}.IDefinition = {
			{{> schemaDefinition schema=definition renderAs="value" }}
		}

		/** The type of a schema instance built off this definition */
		export type Instance = Schema<SpruceSchemas.{{namespace}}.{{pascalName}}.IDefinition>
	}
	
{{/each}}



